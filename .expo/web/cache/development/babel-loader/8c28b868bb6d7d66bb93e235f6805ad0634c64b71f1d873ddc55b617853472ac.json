{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"key\", \"routeNames\"];\nimport * as React from 'react';\nimport { CommonActions } from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationContext from './NavigationContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useChildListeners from './useChildListeners';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport checkSerializable from './checkSerializable';\nconst NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/5.x/navigating-without-navigation-prop#handling-initialization for more details.\";\nconst serializableWarnings = [];\ntry {\n  Object.defineProperty(global, 'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED', {\n    set(_) {\n      console.warn(\"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/5.x/devtools\");\n    }\n  });\n} catch (e) {}\nconst getPartialState = state => {\n  if (state === undefined) {\n    return;\n  }\n  const partialState = _objectWithoutPropertiesLoose(state, _excluded);\n  return Object.assign({}, partialState, {\n    stale: true,\n    routes: state.routes.map(route => {\n      if (route.state === undefined) {\n        return route;\n      }\n      return Object.assign({}, route, {\n        state: getPartialState(route.state)\n      });\n    })\n  });\n};\nconst BaseNavigationContainer = React.forwardRef(function BaseNavigationContainer({\n  initialState,\n  onStateChange,\n  onUnhandledAction,\n  independent,\n  children\n}, ref) {\n  const parent = React.useContext(NavigationStateContext);\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n  const [state, getState, setState, scheduleUpdate, flushUpdates] = useSyncState(() => getPartialState(initialState == null ? undefined : initialState));\n  const isFirstMountRef = React.useRef(true);\n  const navigatorKeyRef = React.useRef();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const setKey = React.useCallback(key => {\n    navigatorKeyRef.current = key;\n  }, []);\n  const {\n    listeners,\n    addListener\n  } = useChildListeners();\n  const {\n    keyedListeners,\n    addKeyedListener\n  } = useKeyedChildListeners();\n  const dispatch = action => {\n    if (listeners.focus[0] == null) {\n      throw new Error(NOT_INITIALIZED_ERROR);\n    }\n    listeners.focus[0](navigation => navigation.dispatch(action));\n  };\n  const canGoBack = () => {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n    const {\n      result,\n      handled\n    } = listeners.focus[0](navigation => navigation.canGoBack());\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  };\n  const resetRoot = React.useCallback(state => {\n    var _state$key, _keyedListeners$getSt, _keyedListeners$getSt2;\n    const target = (_state$key = state === null || state === void 0 ? void 0 : state.key) !== null && _state$key !== void 0 ? _state$key : (_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2).key;\n    if (target == null) {\n      throw new Error(NOT_INITIALIZED_ERROR);\n    }\n    listeners.focus[0](navigation => navigation.dispatch(Object.assign({}, CommonActions.reset(state), {\n      target\n    })));\n  }, [keyedListeners.getState, listeners.focus]);\n  const getRootState = React.useCallback(() => {\n    var _keyedListeners$getSt3, _keyedListeners$getSt4;\n    return (_keyedListeners$getSt3 = (_keyedListeners$getSt4 = keyedListeners.getState).root) === null || _keyedListeners$getSt3 === void 0 ? void 0 : _keyedListeners$getSt3.call(_keyedListeners$getSt4);\n  }, [keyedListeners.getState]);\n  const getCurrentRoute = React.useCallback(() => {\n    let state = getRootState();\n    if (state === undefined) {\n      return undefined;\n    }\n    while (state.routes[state.index].state !== undefined) {\n      state = state.routes[state.index].state;\n    }\n    return state.routes[state.index];\n  }, [getRootState]);\n  const emitter = useEventEmitter();\n  const {\n    addOptionsGetter,\n    getCurrentOptions\n  } = useOptionsGetters({});\n  React.useImperativeHandle(ref, () => Object.assign({}, Object.keys(CommonActions).reduce((acc, name) => {\n    acc[name] = (...args) => dispatch(CommonActions[name](...args));\n    return acc;\n  }, {}), emitter.create('root'), {\n    resetRoot,\n    dispatch,\n    canGoBack,\n    getRootState,\n    getState: () => state,\n    getParent: () => undefined,\n    dangerouslyGetState: () => state,\n    dangerouslyGetParent: () => undefined,\n    getCurrentRoute,\n    getCurrentOptions\n  }));\n  const onDispatchAction = React.useCallback((action, noop) => {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action,\n        noop\n      }\n    });\n  }, [emitter]);\n  const lastEmittedOptionsRef = React.useRef();\n  const onOptionsChange = React.useCallback(options => {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options\n      }\n    });\n  }, [emitter]);\n  const builderContext = React.useMemo(() => ({\n    addListener,\n    addKeyedListener,\n    onDispatchAction,\n    onOptionsChange\n  }), [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  const scheduleContext = React.useMemo(() => ({\n    scheduleUpdate,\n    flushUpdates\n  }), [scheduleUpdate, flushUpdates]);\n  const isInitialRef = React.useRef(true);\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n  const context = React.useMemo(() => ({\n    state,\n    getState,\n    setState,\n    getKey,\n    setKey,\n    getIsInitial,\n    addOptionsGetter\n  }), [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  const onStateChangeRef = React.useRef(onStateChange);\n  React.useEffect(() => {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n  });\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (state !== undefined) {\n        const result = checkSerializable(state);\n        if (!result.serializable) {\n          const {\n            location,\n            reason\n          } = result;\n          let path = '';\n          let pointer = state;\n          let params = false;\n          for (let i = 0; i < location.length; i++) {\n            const curr = location[i];\n            const prev = location[i - 1];\n            pointer = pointer[curr];\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += \" > \".concat(curr);\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += \"[\".concat(curr, \"]\");\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += \".\".concat(curr);\n              } else {\n                path += \"[\".concat(JSON.stringify(curr), \"]\");\n              }\n            }\n          }\n          const message = \"Non-serializable values were found in the navigation state. Check:\\n\\n\".concat(path, \" (\").concat(reason, \")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/5.x/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\");\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n      }\n    }\n    emitter.emit({\n      type: 'state',\n      data: {\n        state\n      }\n    });\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(getRootState());\n    }\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  const defaultOnUnhandledAction = React.useCallback(action => {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n    const payload = action.payload;\n    let message = \"The action '\".concat(action.type, \"'\").concat(payload ? \" with payload \".concat(JSON.stringify(action.payload)) : '', \" was not handled by any navigator.\");\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload !== null && payload !== void 0 && payload.name) {\n          message += \"\\n\\nDo you have a screen named '\".concat(payload.name, \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/5.x/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\");\n        } else {\n          message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/5.x/navigation-actions for usage.\";\n        }\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += \"\\n\\nIs there any screen to go back to?\";\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n        break;\n    }\n    message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n    console.error(message);\n  }, []);\n  let element = React.createElement(ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, React.createElement(NavigationBuilderContext.Provider, {\n    value: builderContext\n  }, React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(UnhandledActionContext.Provider, {\n    value: onUnhandledAction !== null && onUnhandledAction !== void 0 ? onUnhandledAction : defaultOnUnhandledAction\n  }, React.createElement(EnsureSingleNavigator, null, children)))));\n  if (independent) {\n    element = React.createElement(NavigationRouteContext.Provider, {\n      value: undefined\n    }, React.createElement(NavigationContext.Provider, {\n      value: undefined\n    }, element));\n  }\n  return element;\n});\nexport default BaseNavigationContainer;","map":{"version":3,"names":["React","CommonActions","EnsureSingleNavigator","UnhandledActionContext","NavigationBuilderContext","NavigationStateContext","NavigationRouteContext","NavigationContext","ScheduleUpdateContext","useChildListeners","useKeyedChildListeners","useOptionsGetters","useEventEmitter","useSyncState","checkSerializable","NOT_INITIALIZED_ERROR","serializableWarnings","Object","defineProperty","global","set","_","console","warn","e","getPartialState","state","undefined","partialState","_objectWithoutPropertiesLoose","_excluded","assign","stale","routes","map","route","BaseNavigationContainer","forwardRef","initialState","onStateChange","onUnhandledAction","independent","children","ref","parent","useContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","key","listeners","addListener","keyedListeners","addKeyedListener","dispatch","action","focus","navigation","canGoBack","result","handled","resetRoot","_state$key","_keyedListeners$getSt","_keyedListeners$getSt2","target","root","call","reset","getRootState","_keyedListeners$getSt3","_keyedListeners$getSt4","getCurrentRoute","index","emitter","addOptionsGetter","getCurrentOptions","useImperativeHandle","keys","reduce","acc","name","args","create","getParent","dangerouslyGetState","dangerouslyGetParent","onDispatchAction","noop","emit","type","data","lastEmittedOptionsRef","onOptionsChange","options","builderContext","useMemo","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","process","env","NODE_ENV","serializable","location","reason","path","pointer","params","i","length","curr","prev","_pointer","concat","test","JSON","stringify","message","includes","push","defaultOnUnhandledAction","payload","error","element","createElement","Provider","value"],"sources":["/home/cristian/reac_projects/XCampoApp/node_modules/@react-navigation/core/lib/module/BaseNavigationContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationContext from './NavigationContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useChildListeners from './useChildListeners';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport checkSerializable from './checkSerializable';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/5.x/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nconst serializableWarnings: string[] = [];\n\ntry {\n  /**\n   * Migration instructions for removal of devtools from core\n   */\n  Object.defineProperty(\n    global,\n    'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n    {\n      set(_) {\n        console.warn(\n          \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/5.x/devtools\"\n        );\n      },\n    }\n  );\n} catch (e) {\n  // Ignore\n}\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners.focus[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners.focus[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          throw new Error(NOT_INITIALIZED_ERROR);\n        }\n\n        listeners.focus[0]((navigation) =>\n          navigation.dispatch({\n            ...CommonActions.reset(state),\n            target,\n          })\n        );\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-expect-error: we can't know the type statically\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      getState: () => state,\n      getParent: () => undefined,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (state !== undefined) {\n          const result = checkSerializable(state);\n\n          if (!result.serializable) {\n            const { location, reason } = result;\n\n            let path = '';\n            let pointer: Record<any, any> = state;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/5.x/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/5.x/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/5.x/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider\n              value={onUnhandledAction ?? defaultOnUnhandledAction}\n            >\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}