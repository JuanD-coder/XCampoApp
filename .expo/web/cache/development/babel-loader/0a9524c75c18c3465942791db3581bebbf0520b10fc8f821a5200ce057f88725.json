{"ast":null,"code":"import * as React from 'react';\nimport { CommonActions } from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport { PrivateValueStore } from './types';\nPrivateValueStore;\nexport default function useNavigationHelpers({\n  onAction,\n  getState,\n  emitter,\n  router\n}) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n  return React.useMemo(() => {\n    const dispatch = op => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n      const handled = onAction(action);\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n    const actions = Object.assign({}, router.actionCreators, CommonActions);\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      acc[name] = (...args) => dispatch(actions[name](...args));\n      return acc;\n    }, {});\n    return Object.assign({}, parentNavigationHelpers, helpers, {\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : () => true,\n      canGoBack: () => {\n        const state = getState();\n        return router.getStateForAction(state, CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      getParent: () => parentNavigationHelpers,\n      getState,\n      dangerouslyGetParent: () => parentNavigationHelpers,\n      dangerouslyGetState: getState\n    });\n  }, [emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}","map":{"version":3,"names":["React","CommonActions","NavigationContext","UnhandledActionContext","PrivateValueStore","useNavigationHelpers","onAction","getState","emitter","router","onUnhandledAction","useContext","parentNavigationHelpers","useMemo","dispatch","op","action","handled","actions","Object","assign","actionCreators","helpers","keys","reduce","acc","name","args","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getParent","dangerouslyGetParent","dangerouslyGetState"],"sources":["/home/cristian/reac_projects/XCampoApp/node_modules/@react-navigation/core/lib/module/useNavigationHelpers.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { NavigationHelpers, NavigationProp, PrivateValueStore } from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-expect-error: name is a valid key, but TypeScript is dumb\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      getParent: () => parentNavigationHelpers as any,\n      getState,\n      dangerouslyGetParent: () => parentNavigationHelpers as any,\n      dangerouslyGetState: getState,\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined) &\n      ActionHelpers;\n  }, [\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,aADF,QAMO,2BANP;AAOA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,SAA4CC,iBAA5C,QAAqE,SAArE;AAIAA,iBAAiB;AAgBjB,eAAe,SAASC,oBAATA,CAKb;EAAEC,QAAF;EAAYC,QAAZ;EAAsBC,OAAtB;EAA+BC;AAA/B,CALa,EAKoD;EACjE,MAAMC,iBAAiB,GAAGV,KAAK,CAACW,UAAN,CAAiBR,sBAAjB,CAA1B;EACA,MAAMS,uBAAuB,GAAGZ,KAAK,CAACW,UAAN,CAAiBT,iBAAjB,CAAhC;EAEA,OAAOF,KAAK,CAACa,OAAN,CAAc,MAAM;IACzB,MAAMC,QAAQ,GAAIC,EAAD,IAA6C;MAC5D,MAAMC,MAAM,GAAG,OAAOD,EAAP,KAAc,UAAd,GAA2BA,EAAE,CAACR,QAAQ,EAAT,CAA7B,GAA4CQ,EAA3D;MAEA,MAAME,OAAO,GAAGX,QAAQ,CAACU,MAAD,CAAxB;MAEA,IAAI,CAACC,OAAL,EAAc;QACZP,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAGM,MAAH,CAAjB;MACD;IACF,CARD;IAUA,MAAME,OAAO,GAAAC,MAAA,CAAAC,MAAA,KACRX,MAAM,CAACY,cADI,EAEXpB,aAAA,CAFL;IAKA,MAAMqB,OAAO,GAAGH,MAAM,CAACI,IAAP,CAAYL,OAAZ,EAAqBM,MAArB,CACd,CAACC,GAAD,EAAMC,IAAN,KAAe;MAEbD,GAAG,CAACC,IAAD,CAAH,GAAY,CAAC,GAAGC,IAAJ,KAAkBb,QAAQ,CAACI,OAAO,CAACQ,IAAD,CAAP,CAAc,GAAGC,IAAjB,CAAD,CAAtC;MACA,OAAOF,GAAP;IACD,CALa,EAMd,EANc,CAAhB;IASA,OAAAN,MAAA,CAAAC,MAAA,KACKR,uBADE,EAEFU,OAFE;MAGLR,QAHK;MAILc,IAAI,EAAEpB,OAAO,CAACoB,IAJT;MAKLC,SAAS,EAAEjB,uBAAuB,GAC9BA,uBAAuB,CAACiB,SADM,GAE9B,MAAM,IAPL;MAQLC,SAAS,EAAEA,CAAA,KAAM;QACf,MAAMC,KAAK,GAAGxB,QAAQ,EAAtB;QAEA,OACEE,MAAM,CAACuB,iBAAP,CAAyBD,KAAzB,EAAgC9B,aAAa,CAACgC,MAAd,EAAhC,EAAkE;UAChEC,UAAU,EAAEH,KAAK,CAACG,UAD8C;UAEhEC,cAAc,EAAE,EAFgD;UAGhEC,cAAc,EAAE;QAHgD,CAAlE,MAIO,IAJP,KAKAxB,uBALA,aAKAA,uBALA,uBAKAA,uBAAuB,CAAEkB,SAAzB,EALA,KAMA,KAPF;MASD,CApBI;MAqBLO,SAAS,EAAEA,CAAA,KAAMzB,uBArBZ;MAsBLL,QAtBK;MAuBL+B,oBAAoB,EAAEA,CAAA,KAAM1B,uBAvBvB;MAwBL2B,mBAAmB,EAAEhC;IAAA;EAIxB,CArDM,EAqDJ,CACDC,OAAO,CAACoB,IADP,EAEDrB,QAFC,EAGDD,QAHC,EAIDI,iBAJC,EAKDE,uBALC,EAMDH,MANC,CArDI,CAAP;AA6DD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}