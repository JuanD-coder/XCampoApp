{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"emit\"];\nimport * as React from 'react';\nimport { CommonActions } from '@react-navigation/routers';\nexport default function useNavigationCache({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter\n}) {\n  const cache = React.useMemo(() => ({\n    current: {}\n  }), [getState, navigation, setOptions, router, emitter]);\n  const actions = Object.assign({}, router.actionCreators, CommonActions);\n  cache.current = state.routes.reduce((acc, route) => {\n    const previous = cache.current[route.key];\n    if (previous) {\n      acc[route.key] = previous;\n    } else {\n      const rest = _objectWithoutPropertiesLoose(navigation, _excluded);\n      const dispatch = action => {\n        const payload = typeof action === 'function' ? action(getState()) : action;\n        navigation.dispatch(typeof payload === 'object' && payload != null ? Object.assign({\n          source: route.key\n        }, payload) : payload);\n      };\n      const helpers = Object.keys(actions).reduce((acc, name) => {\n        acc[name] = (...args) => dispatch(actions[name](...args));\n        return acc;\n      }, {});\n      acc[route.key] = Object.assign({}, rest, helpers, emitter.create(route.key), {\n        dispatch,\n        setOptions: options => setOptions(o => Object.assign({}, o, {\n          [route.key]: Object.assign({}, o[route.key], options)\n        })),\n        isFocused: () => {\n          const state = getState();\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n          return navigation ? navigation.isFocused() : true;\n        }\n      });\n    }\n    return acc;\n  }, {});\n  return cache.current;\n}","map":{"version":3,"names":["React","CommonActions","useNavigationCache","state","getState","navigation","setOptions","router","emitter","cache","useMemo","current","actions","Object","assign","actionCreators","routes","reduce","acc","route","previous","key","rest","_objectWithoutPropertiesLoose","_excluded","dispatch","action","payload","source","helpers","keys","name","args","create","options","o","isFocused","index"],"sources":["/home/cristian/reac_projects/XCampoApp/node_modules/@react-navigation/core/lib/module/useNavigationCache.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  ParamListBase,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\nimport type { EventMapBase, NavigationHelpers, NavigationProp } from './types';\n\ntype Options<State extends NavigationState> = {\n  state: State;\n  getState: () => State;\n  navigation: NavigationHelpers<ParamListBase> &\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\n  setOptions: (\n    cb: (options: Record<string, object>) => Record<string, object>\n  ) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMapBase>;\n};\n\ntype NavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {}\n> = {\n  [key: string]: NavigationProp<ParamListBase, string, State, ScreenOptions>;\n};\n\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {}\n>({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter,\n}: Options<State>) {\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(\n    () => ({ current: {} as NavigationCache<State, ScreenOptions> }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, navigation, setOptions, router, emitter]\n  );\n\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions,\n  };\n\n  cache.current = state.routes.reduce<NavigationCache<State, ScreenOptions>>(\n    (acc, route) => {\n      const previous = cache.current[route.key];\n\n      if (previous) {\n        // If a cached navigation object already exists, reuse it\n        acc[route.key] = previous;\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { emit, ...rest } = navigation;\n\n        const dispatch = (\n          action: NavigationAction | ((state: State) => NavigationAction)\n        ) => {\n          const payload =\n            typeof action === 'function' ? action(getState()) : action;\n\n          navigation.dispatch(\n            typeof payload === 'object' && payload != null\n              ? { source: route.key, ...payload }\n              : payload\n          );\n        };\n\n        const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n          (acc, name) => {\n            // @ts-expect-error: name is a valid key, but TypeScript is dumb\n            acc[name] = (...args: any) => dispatch(actions[name](...args));\n            return acc;\n          },\n          {}\n        );\n\n        acc[route.key] = {\n          ...rest,\n          ...helpers,\n          ...emitter.create(route.key),\n          dispatch,\n          setOptions: (options: object) =>\n            setOptions((o) => ({\n              ...o,\n              [route.key]: { ...o[route.key], ...options },\n            })),\n          isFocused: () => {\n            const state = getState();\n\n            if (state.routes[state.index].key !== route.key) {\n              return false;\n            }\n\n            // If the current screen is focused, we also need to check if parent navigator is focused\n            // This makes sure that we return the focus state in the whole tree, not just this navigator\n            return navigation ? navigation.isFocused() : true;\n          },\n        };\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return cache.current;\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,aADF,QAMO,2BANP;AAmCA,eAAe,SAASC,kBAATA,CAGb;EACAC,KADA;EAEAC,QAFA;EAGAC,UAHA;EAIAC,UAJA;EAKAC,MALA;EAMAC;AANA,CAHa,EAUI;EAIjB,MAAMC,KAAK,GAAGT,KAAK,CAACU,OAAN,CACZ,OAAO;IAAEC,OAAO,EAAE;EAAX,CAAP,CADY,EAGZ,CAACP,QAAD,EAAWC,UAAX,EAAuBC,UAAvB,EAAmCC,MAAnC,EAA2CC,OAA3C,CAHY,CAAd;EAMA,MAAMI,OAAO,GAAAC,MAAA,CAAAC,MAAA,KACRP,MAAM,CAACQ,cADI,EAEXd,aAAA,CAFL;EAKAQ,KAAK,CAACE,OAAN,GAAgBR,KAAK,CAACa,MAAN,CAAaC,MAAb,CACd,CAACC,GAAD,EAAMC,KAAN,KAAgB;IACd,MAAMC,QAAQ,GAAGX,KAAK,CAACE,OAAN,CAAcQ,KAAK,CAACE,GAApB,CAAjB;IAEA,IAAID,QAAJ,EAAc;MAEZF,GAAG,CAACC,KAAK,CAACE,GAAP,CAAH,GAAiBD,QAAjB;IACD,CAHD,MAGO;MAEL,MAAiBE,IAAA,GAAAC,6BAAA,CAASlB,UAA1B,EAAAmB,SAAA;MAEA,MAAMC,QAAQ,GACZC,MADe,IAEZ;QACH,MAAMC,OAAO,GACX,OAAOD,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACtB,QAAQ,EAAT,CAArC,GAAoDsB,MADtD;QAGArB,UAAU,CAACoB,QAAX,CACE,OAAOE,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,IAAI,IAA1C,GAAAd,MAAA,CAAAC,MAAA;UACMc,MAAM,EAAET,KAAK,CAACE;QAAhB,GAAwBM,OAAA,IACxBA,OAHN;MAKD,CAXD;MAaA,MAAME,OAAO,GAAGhB,MAAM,CAACiB,IAAP,CAAYlB,OAAZ,EAAqBK,MAArB,CACd,CAACC,GAAD,EAAMa,IAAN,KAAe;QAEbb,GAAG,CAACa,IAAD,CAAH,GAAY,CAAC,GAAGC,IAAJ,KAAkBP,QAAQ,CAACb,OAAO,CAACmB,IAAD,CAAP,CAAc,GAAGC,IAAjB,CAAD,CAAtC;QACA,OAAOd,GAAP;MACD,CALa,EAMd,EANc,CAAhB;MASAA,GAAG,CAACC,KAAK,CAACE,GAAP,CAAH,GAAAR,MAAA,CAAAC,MAAA,KACKQ,IADY,EAEZO,OAFY,EAGZrB,OAAO,CAACyB,MAAR,CAAed,KAAK,CAACE,GAArB,CAHY;QAIfI,QAJe;QAKfnB,UAAU,EAAG4B,OAAD,IACV5B,UAAU,CAAE6B,CAAD,IAAAtB,MAAA,CAAAC,MAAA,KACNqB,CADc;UAEjB,CAAChB,KAAK,CAACE,GAAP,GAAAR,MAAA,CAAAC,MAAA,KAAkBqB,CAAC,CAAChB,KAAK,CAACE,GAAP,CAAN,EAAsBa,OAAA;QAAtB,EAFL,CANG;QAUfE,SAAS,EAAEA,CAAA,KAAM;UACf,MAAMjC,KAAK,GAAGC,QAAQ,EAAtB;UAEA,IAAID,KAAK,CAACa,MAAN,CAAab,KAAK,CAACkC,KAAnB,EAA0BhB,GAA1B,KAAkCF,KAAK,CAACE,GAA5C,EAAiD;YAC/C,OAAO,KAAP;UACD;UAID,OAAOhB,UAAU,GAAGA,UAAU,CAAC+B,SAAX,EAAH,GAA4B,IAA7C;QACD;MAAA,EApBH;IAsBD;IAED,OAAOlB,GAAP;EACD,CA1Da,EA2Dd,EA3Dc,CAAhB;EA8DA,OAAOT,KAAK,CAACE,OAAb;AACD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}