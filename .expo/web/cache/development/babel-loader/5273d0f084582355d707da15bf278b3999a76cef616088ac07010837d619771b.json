{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"to\", \"action\"];\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useLinkProps from './useLinkProps';\nexport default function Link(_ref) {\n  let {\n      to,\n      action\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const props = useLinkProps({\n    to,\n    action\n  });\n  const onPress = e => {\n    if ('onPress' in rest) {\n      var _rest$onPress;\n      (_rest$onPress = rest.onPress) === null || _rest$onPress === void 0 ? void 0 : _rest$onPress.call(rest, e);\n    }\n    props.onPress(e);\n  };\n  return React.createElement(Text, Object.assign({}, props, rest, Platform.select({\n    web: {\n      onClick: onPress\n    },\n    default: {\n      onPress\n    }\n  })));\n}","map":{"version":3,"names":["React","Text","Platform","useLinkProps","Link","_ref","to","action","rest","_objectWithoutPropertiesLoose","_excluded","props","onPress","e","_rest$onPress","call","createElement","Object","assign","select","web","onClick","default"],"sources":["/home/cristian/reac_projects/XCampoApp/node_modules/@react-navigation/native/lib/module/Link.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Text, TextProps, GestureResponderEvent, Platform } from 'react-native';\nimport type { NavigationAction } from '@react-navigation/core';\nimport useLinkProps from './useLinkProps';\n\ntype Props = {\n  to: string;\n  action?: NavigationAction;\n  target?: string;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n} & (TextProps & { children: React.ReactNode });\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link({ to, action, ...rest }: Props) {\n  const props = useLinkProps({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n  });\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGA,OAAOC,YAAP,MAAyB,gBAAzB;AAmBA,eAAe,SAASC,IAATA,CAAAC,IAAA,EAA8C;EAAA,IAAhC;MAAEC,EAAF;MAAMC;IAAN,CAAd,GAAAF,IAAA;IAA+BG,IAAA,GAAAC,6BAAA,CAAAJ,IAAA,EAAAK,SAAA;EAC5C,MAAMC,KAAK,GAAGR,YAAY,CAAC;IAAEG,EAAF;IAAMC;EAAN,CAAD,CAA1B;EAEA,MAAMK,OAAO,GACXC,CADc,IAEX;IACH,IAAI,aAAaL,IAAjB,EAAuB;MAAA,IAAAM,aAAA;MACrB,CAAAA,aAAA,GAAAN,IAAI,CAACI,OAAL,cAAAE,aAAA,uBAAAA,aAAA,CAAAC,IAAA,CAAAP,IAAI,EAAWK,CAAX,CAAJ;IACD;IAEDF,KAAK,CAACC,OAAN,CAAcC,CAAd;EACD,CARD;EAUA,OAAOb,KAAK,CAACgB,aAAN,CAAoBf,IAApB,EAAAgB,MAAA,CAAAC,MAAA,KACFP,KAD4B,EAE5BH,IAF4B,EAG5BN,QAAQ,CAACiB,MAAT,CAAgB;IACjBC,GAAG,EAAE;MAAEC,OAAO,EAAET;IAAX,CADY;IAEjBU,OAAO,EAAE;MAAEV;IAAF;EAFQ,CAAhB,EAHE,CAAP;AAQD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}