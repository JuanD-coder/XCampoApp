{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport Header from './Header';\nimport { forSlideLeft, forSlideUp, forNoAnimation, forSlideRight } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style\n}) {\n  const focusedRoute = getFocusedRoute();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentPreviousScene = React.useContext(PreviousSceneContext);\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map((scene, i, self) => {\n    var _getPreviousScene;\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n    const {\n      header,\n      headerShown = isParentHeaderShown === false,\n      headerTransparent\n    } = scene.descriptor.options || {};\n    if (!headerShown) {\n      return null;\n    }\n    const isFocused = focusedRoute.key === scene.route.key;\n    const previous = (_getPreviousScene = getPreviousScene({\n      route: scene.route\n    })) !== null && _getPreviousScene !== void 0 ? _getPreviousScene : parentPreviousScene;\n    const previousScene = self[i - 1];\n    const nextScene = self[i + 1];\n    const {\n      headerShown: previousHeaderShown = isParentHeaderShown === false\n    } = (previousScene === null || previousScene === void 0 ? void 0 : previousScene.descriptor.options) || {};\n    const {\n      headerShown: nextHeaderShown = isParentHeaderShown === false\n    } = (nextScene === null || nextScene === void 0 ? void 0 : nextScene.descriptor.options) || {};\n    const isHeaderStatic = previousHeaderShown === false && !nextScene || nextHeaderShown === false;\n    const props = {\n      mode,\n      layout,\n      insets,\n      scene,\n      previous,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? forSlideUp : gestureDirection === 'horizontal-inverted' ? forSlideRight : forSlideLeft : styleInterpolator : forNoAnimation\n    };\n    return React.createElement(NavigationContext.Provider, {\n      key: scene.route.key,\n      value: scene.descriptor.navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: scene.route\n    }, React.createElement(View, {\n      onLayout: onContentHeightChange ? e => onContentHeightChange({\n        route: scene.route,\n        height: e.nativeEvent.layout.height\n      }) : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style: mode === 'float' && !isFocused || headerTransparent ? styles.header : null\n    }, header !== undefined ? header(props) : React.createElement(Header, props))));\n  }));\n}\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","NavigationContext","NavigationRouteContext","Header","forSlideLeft","forSlideUp","forNoAnimation","forSlideRight","HeaderShownContext","PreviousSceneContext","HeaderContainer","mode","scenes","layout","insets","getPreviousScene","getFocusedRoute","onContentHeightChange","gestureDirection","styleInterpolator","style","focusedRoute","isParentHeaderShown","useContext","parentPreviousScene","createElement","pointerEvents","slice","map","scene","i","self","_getPreviousScene","length","header","headerShown","headerTransparent","descriptor","options","isFocused","key","route","previous","previousScene","nextScene","previousHeaderShown","nextHeaderShown","isHeaderStatic","props","navigation","Provider","value","onLayout","e","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","styles","create","position","top","left","right"],"sources":["/home/cristian/reac_projects/XCampoApp/node_modules/@react-navigation/stack/lib/module/views/Header/HeaderContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  Route,\n  ParamListBase,\n} from '@react-navigation/native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport Header from './Header';\nimport {\n  forSlideLeft,\n  forSlideUp,\n  forNoAnimation,\n  forSlideRight,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nimport type {\n  Layout,\n  Scene,\n  StackHeaderStyleInterpolator,\n  StackNavigationProp,\n  GestureDirection,\n} from '../../types';\n\nexport type Props = {\n  mode: 'float' | 'screen';\n  layout: Layout;\n  insets: EdgeInsets;\n  scenes: (Scene<Route<string>> | undefined)[];\n  getPreviousScene: (props: {\n    route: Route<string>;\n  }) => Scene<Route<string>> | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  styleInterpolator: StackHeaderStyleInterpolator;\n  gestureDirection: GestureDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentPreviousScene = React.useContext(PreviousSceneContext);\n\n  return (\n    <View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const {\n          header,\n          headerShown = isParentHeaderShown === false,\n          headerTransparent,\n        } = scene.descriptor.options || {};\n\n        if (!headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.route.key;\n        const previous =\n          getPreviousScene({ route: scene.route }) ?? parentPreviousScene;\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousScene = self[i - 1];\n        const nextScene = self[i + 1];\n\n        const {\n          headerShown: previousHeaderShown = isParentHeaderShown === false,\n        } = previousScene?.descriptor.options || {};\n\n        const { headerShown: nextHeaderShown = isParentHeaderShown === false } =\n          nextScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          (previousHeaderShown === false &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextScene) ||\n          nextHeaderShown === false;\n\n        const props = {\n          mode,\n          layout,\n          insets,\n          scene,\n          previous,\n          navigation: scene.descriptor.navigation as StackNavigationProp<\n            ParamListBase\n          >,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? gestureDirection === 'vertical' ||\n                  gestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : gestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : styleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) =>\n                        onContentHeightChange({\n                          route: scene.route,\n                          height: e.nativeEvent.layout.height,\n                        })\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}