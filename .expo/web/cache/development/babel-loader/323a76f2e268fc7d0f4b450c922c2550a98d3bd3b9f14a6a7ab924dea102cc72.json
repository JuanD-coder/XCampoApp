{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nlet Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nclass WebScreen extends React.Component {\n  render() {\n    const _this$props = this.props,\n      {\n        active,\n        style\n      } = _this$props,\n      rest = _objectWithoutProperties(_this$props, [\"active\", \"style\"]);\n    return React.createElement(View, _extends({\n      hidden: !active,\n      style: [style, {\n        display: active ? 'flex' : 'none'\n      }]\n    }, rest));\n  }\n}\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\nexport const MaybeScreenContainer = _ref => {\n  let {\n      enabled\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, [\"enabled\"]);\n  if (enabled && Platform.OS !== 'web' && Screens && Screens.screensEnabled()) {\n    return React.createElement(Screens.ScreenContainer, rest);\n  }\n  return React.createElement(View, rest);\n};\nexport const MaybeScreen = _ref2 => {\n  let {\n      enabled,\n      active\n    } = _ref2,\n    rest = _objectWithoutProperties(_ref2, [\"enabled\", \"active\"]);\n  if (enabled && Platform.OS === 'web') {\n    return React.createElement(AnimatedWebScreen, _extends({\n      active: active\n    }, rest));\n  }\n  if (enabled && Screens && Screens.screensEnabled()) {\n    return React.createElement(Screens.Screen, _extends({\n      active: active\n    }, rest));\n  }\n  return React.createElement(View, rest);\n};","map":{"version":3,"names":["React","Animated","View","Platform","Screens","require","e","WebScreen","Component","render","_this$props","props","active","style","rest","_objectWithoutProperties","createElement","_extends","hidden","display","AnimatedWebScreen","createAnimatedComponent","MaybeScreenContainer","_ref","enabled","OS","screensEnabled","ScreenContainer","MaybeScreen","_ref2","Screen"],"sources":["/home/cristian/reac_projects/XCampoApp/node_modules/@react-navigation/stack/lib/module/views/Screens.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, Platform, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\n// The web implementation in react-native-screens seems buggy.\n// The view doesn't become visible after coming back in some cases.\n// So we use our custom implementation.\nclass WebScreen extends React.Component<\n  ViewProps & {\n    active: number;\n    children: React.ReactNode;\n  }\n> {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!active}\n        style={[style, { display: active ? 'flex' : 'none' }]}\n        {...rest}\n      />\n    );\n  }\n}\n\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS !== 'web' && Screens && Screens.screensEnabled()) {\n    return <Screens.ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS === 'web') {\n    return <AnimatedWebScreen active={active} {...rest} />;\n  }\n\n  if (enabled && Screens && Screens.screensEnabled()) {\n    // @ts-expect-error: stackPresentation is incorrectly marked as required\n    return <Screens.Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGA,IAAIC,OAAJ;AAEA,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjB;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CAEX;AAKD,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAKE;EACAC,MAAMA,CAAA,EAAG;IACP,MAAAC,WAAA,GAAmC,KAAKC,KAAxC;MAAM;QAAEC,MAAF;QAAUC;MAAV,CAAN,GAAAH,WAAA;MAA0BI,IAA1B,GAAAC,wBAAA,CAAAL,WAAA;IAEA,OACEV,KAAA,CAAAgB,aAAA,CAACd,IAAD,EAAAe,QAAA;MAEEC,MAAM,EAAE,CAACN,MAFX;MAGEC,KAAK,EAAE,CAACA,KAAD,EAAQ;QAAEM,OAAO,EAAEP,MAAM,GAAG,MAAH,GAAY;MAA7B,CAAR;IAHT,GAIME,IAJN,EADF;EAQD;AAZD;AAeF,MAAMM,iBAAiB,GAAGnB,QAAQ,CAACoB,uBAAT,CAAiCd,SAAjC,CAA1B;AAEA,OAAO,MAAMe,oBAAoB,GAAGC,IAAA,IAM9B;EAAA,IAN+B;MACnCC;IADmC,CAM/B,GAAAD,IAAA;IAJDT,IAIC,GAAAC,wBAAA,CAAAQ,IAAA;EACJ,IAAIC,OAAO,IAAIrB,QAAQ,CAACsB,EAAT,KAAgB,KAA3B,IAAoCrB,OAApC,IAA+CA,OAAO,CAACsB,cAAR,EAAnD,EAA6E;IAC3E,OAAO1B,KAAA,CAAAgB,aAAA,CAACZ,OAAD,CAASuB,eAAT,EAA6Bb,IAA7B,CAAP;EACD;EAED,OAAOd,KAAA,CAAAgB,aAAA,CAACd,IAAD,EAAUY,IAAV,CAAP;AACD,CAZM;AAcP,OAAO,MAAMc,WAAW,GAAGC,KAAA,IAQrB;EAAA,IARsB;MAC1BL,OAD0B;MAE1BZ;IAF0B,CAQtB,GAAAiB,KAAA;IALDf,IAKC,GAAAC,wBAAA,CAAAc,KAAA;EACJ,IAAIL,OAAO,IAAIrB,QAAQ,CAACsB,EAAT,KAAgB,KAA/B,EAAsC;IACpC,OAAOzB,KAAA,CAAAgB,aAAA,CAACI,iBAAD,EAAAH,QAAA;MAAmBL,MAAM,EAAEA;IAA3B,GAAuCE,IAAvC,EAAP;EACD;EAED,IAAIU,OAAO,IAAIpB,OAAX,IAAsBA,OAAO,CAACsB,cAAR,EAA1B,EAAoD;IAElD,OAAO1B,KAAA,CAAAgB,aAAA,CAACZ,OAAD,CAAS0B,MAAT,EAAAb,QAAA;MAAgBL,MAAM,EAAEA;IAAxB,GAAoCE,IAApC,EAAP;EACD;EAED,OAAOd,KAAA,CAAAgB,aAAA,CAACd,IAAD,EAAUY,IAAV,CAAP;AACD,CAnBM","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}