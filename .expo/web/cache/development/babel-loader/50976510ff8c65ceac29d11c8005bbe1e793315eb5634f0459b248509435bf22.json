{"ast":null,"code":"export function goBack() {\n  return {\n    type: 'GO_BACK'\n  };\n}\nexport function navigate(...args) {\n  if (typeof args[0] === 'string') {\n    return {\n      type: 'NAVIGATE',\n      payload: {\n        name: args[0],\n        params: args[1]\n      }\n    };\n  } else {\n    const payload = args[0] || {};\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error('You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/5.x/navigation-actions#navigate for usage.');\n    }\n    return {\n      type: 'NAVIGATE',\n      payload\n    };\n  }\n}\nexport function reset(state) {\n  return {\n    type: 'RESET',\n    payload: state\n  };\n}\nexport function setParams(params) {\n  return {\n    type: 'SET_PARAMS',\n    payload: {\n      params\n    }\n  };\n}","map":{"version":3,"names":["goBack","type","navigate","args","payload","name","params","hasOwnProperty","Error","reset","state","setParams"],"sources":["/home/cristian/reac_projects/XCampoApp/node_modules/@react-navigation/routers/lib/module/CommonActions.tsx"],"sourcesContent":["import type { NavigationState, PartialState, Route } from './types';\n\ntype ResetState =\n  | PartialState<NavigationState>\n  | NavigationState\n  | (Omit<NavigationState, 'routes'> & {\n      routes: Omit<Route<string>, 'key'>[];\n    });\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | { key: string; name?: undefined; params?: object; merge?: boolean }\n        | { name: string; key?: string; params?: object; merge?: boolean };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: ResetState | undefined;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  route:\n    | { key: string; params?: object }\n    | { name: string; key?: string; params?: object }\n): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(name: string, params?: object): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0] || {};\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/5.x/navigation-actions#navigate for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: ResetState | undefined): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n"],"mappings":"AAoCA,OAAO,SAASA,MAATA,CAAA,EAA0B;EAC/B,OAAO;IAAEC,IAAI,EAAE;EAAR,CAAP;AACD;AAUD,OAAO,SAASC,QAATA,CAAkB,GAAGC,IAArB,EAAwC;EAC7C,IAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;IAC/B,OAAO;MAAEF,IAAI,EAAE,UAAR;MAAoBG,OAAO,EAAE;QAAEC,IAAI,EAAEF,IAAI,CAAC,CAAD,CAAZ;QAAiBG,MAAM,EAAEH,IAAI,CAAC,CAAD;MAA7B;IAA7B,CAAP;EACD,CAFD,MAEO;IACL,MAAMC,OAAO,GAAGD,IAAI,CAAC,CAAD,CAAJ,IAAW,EAA3B;IAEA,IAAI,CAACC,OAAO,CAACG,cAAR,CAAuB,KAAvB,CAAD,IAAkC,CAACH,OAAO,CAACG,cAAR,CAAuB,MAAvB,CAAvC,EAAuE;MACrE,MAAM,IAAIC,KAAJ,CACJ,uKADI,CAAN;IAGD;IAED,OAAO;MAAEP,IAAI,EAAE,UAAR;MAAoBG;IAApB,CAAP;EACD;AACF;AAED,OAAO,SAASK,KAATA,CAAeC,KAAf,EAAsD;EAC3D,OAAO;IAAET,IAAI,EAAE,OAAR;IAAiBG,OAAO,EAAEM;EAA1B,CAAP;AACD;AAED,OAAO,SAASC,SAATA,CAAmBL,MAAnB,EAA2C;EAChD,OAAO;IAAEL,IAAI,EAAE,YAAR;IAAsBG,OAAO,EAAE;MAAEE;IAAF;EAA/B,CAAP;AACD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}